name: Build and Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: cv-cancer
  REGION: northamerica-northeast2
  REPO_NAME: breast-cancer-repo
  SERVICE_NAME: breast-cancer-classifier

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install DVC
        run: pip install "dvc[gdrive]"

      - name: Authenticate DVC with Google Drive
        run: |
          # Create the directory if it doesn't exist
          mkdir -p ~/.config/dvc
          # Write the credentials from the GitHub secret into the file
          echo '${{ secrets.GDRIVE_CREDENTIALS_DATA }}' > ~/.config/dvc/gdrive-user-credentials.json
          # --- Verification Step ---
          echo "Verifying credentials file..."
          if [ -s ~/.config/dvc/gdrive-user-credentials.json ]; then
            echo "Credentials file created successfully."
          else
            echo "Error: Credentials file is empty or was not created."
            exit 1
          fi

      - name: Pull DVC data
        run: dvc pull --force

      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --platform=managed \
            --region=${{ env.REGION }} \
            --memory=2Gi \
            --allow-unauthenticated