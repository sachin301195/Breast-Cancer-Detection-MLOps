name: Build and Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: cv-cancer
  REGION: northamerica-northeast2
  REPO_NAME: breast-cancer-repo
  SERVICE_NAME: breast-cancer-classifier

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (Full & Clean)
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      # --- THIS IS THE FINAL FIX AND DIAGNOSTIC ---
      - name: "Fix: Ensure requirements-prod.txt is visible to Docker"
        run: |
          echo "--- Current .dockerignore contents ---"
          cat .dockerignore || echo ".dockerignore not found. Creating one."
          echo ""
          echo "--- Adding explicit rule to allow requirements-prod.txt ---"
          # This command adds a line to the .dockerignore file that says
          # "Do NOT ignore this file", overriding any other rules.
          echo "!requirements-prod.txt" >> .dockerignore
          echo "--- New .dockerignore contents ---"
          cat .dockerignore

      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --platform=managed \
            --region=${{ env.REGION }} \
            --memory=2Gi \
            --allow-unauthenticated

